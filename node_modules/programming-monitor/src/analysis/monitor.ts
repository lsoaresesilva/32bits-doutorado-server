import IndentationError from "../programming_errors/indentationError";
import { InterpretationError } from "../programming_errors/interpretationError";
import NameError from "../programming_errors/nameError";
import SyntaxError from "../programming_errors/syntaxError";
import TypeError from "../programming_errors/typeError";
import ErrorFrequency from "./errorFrequency";

export default class Monitor {
  static getFrequency(errors: InterpretationError[]) {
    const frequency: ErrorFrequency = new ErrorFrequency();

    errors.forEach((error: InterpretationError) => {
      if (error != null && error instanceof InterpretationError) {
        if (error instanceof NameError) {
          frequency.nameError += 1;
        } else if (error instanceof TypeError) {
          frequency.typeError += 1;
        } else if (error instanceof IndentationError) {
          frequency.indentationError += 1;
        } else if (error instanceof SyntaxError) {
          frequency.syntaxError += 1;
        }
      }
    });

    return frequency;
  }
}
