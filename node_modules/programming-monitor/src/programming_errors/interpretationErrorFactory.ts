import { ErrorCategory } from "../enum/errorCategory";
import DefaultError from "./defaultError";
import IndentationError from "./indentationError";
import { InterpretationError } from "./interpretationError";
import NameError from "./nameError";

class InterpretationErrorFactory {
  public static build(traceback: string) {
    let instace;

    switch (InterpretationError.getCategory(traceback)) {
      case ErrorCategory.nameError:
        instace = new NameError(traceback);
        break;
      case ErrorCategory.syntaxError:
        instace = new SyntaxError(traceback);
        break;
      case ErrorCategory.typeError:
        instace = new TypeError(traceback);
        break;
      case ErrorCategory.indentationError:
        instace = new IndentationError(traceback);
        break;
      default:
        // TODO: erro gen√©rico
        instace = new DefaultError(traceback);
        break;
    }

    return instace;
  }
}

export default InterpretationErrorFactory;
